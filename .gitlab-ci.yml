---
variables:
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_IMAGE: safu-ci:$CI_COMMIT_REF_SLUG

workflow:
  auto_cancel:
    on_new_commit: interruptible

stages:
  - docker-image
  - build
  - test

default:
  image: $CI_REGISTRY_IMAGE/$DOCKER_IMAGE
  services:
    - name: docker:24-dind
      alias: docker
      variables:
        DOCKER_TLS_CERTDIR: ""
  tags:
      - "docker"
  interruptible: true

before_script:
  - env | sort

build-docker-image:
  stage: docker-image
  image: ubuntu:jammy
  before_script:
    - apt-get update
    - apt-get install -y docker.io
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE -f ci/Dockerfile
             --build-arg UID=$(id -u) --build-arg GID=$(id -g)
             --build-arg ASMCOV_URI="$ASMCOV_URI"
             ci/
    - docker tag $DOCKER_IMAGE $CI_REGISTRY_IMAGE/$DOCKER_IMAGE
    - docker push $CI_REGISTRY_IMAGE/$DOCKER_IMAGE

build-dependencies:
  stage: build
  needs:
    - build-docker-image
  script:
    - ci/install_deps.py -c ci/dependencies_emlix.json
  artifacts:
    paths:
      - build/deps/lib/
      - build/deps/include/

build-release:
  stage: build
  needs:
    - build-docker-image
    - build-dependencies
  script:
    - ci/build.sh --ci Release
  artifacts:
    paths:
      - build/Release/dist/
      - build/Release/cmake/

build-debug:
  stage: build
  needs:
    - build-docker-image
    - build-dependencies
  script:
    - ci/build.sh --ci Debug
  artifacts:
    paths:
      - build/Debug/dist/
      - build/Debug/cmake/

unit-test-release:
  stage: test
  needs:
    - build-docker-image
    - build-release
    - build-dependencies
  script:
    - ci/run_utest.sh Release
  artifacts:
    when: always
    paths:
      - build/Release/result/unit_test/
    reports:
      junit: build/Release/result/unit_test/junit.xml

unit-test-debug:
  stage: test
  needs:
    - build-docker-image
    - build-debug
    - build-dependencies
  script:
    - ci/run_utest.sh Debug
  artifacts:
    when: always
    paths:
      - build/Debug/result/unit_test/
    reports:
      junit: build/Debug/result/unit_test/junit.xml

code-lint:
  stage: test
  needs:
    - build-docker-image
    - build-release
    - build-dependencies
  script:
    - ci/code_lint.py --ci
    - ci/checklicense.sh
  artifacts:
    when: always
    paths:
      - build/Release/cmake/lint_results/

code-coverage:
  stage: test
  tags:
    - "intelpt"
    - "docker"
  needs:
    - build-docker-image
    - build-release
    - build-dependencies
  script:
    - cat /proc/cpuinfo
    - ls -lah /sys/devices/intel_pt
    - ci/create_coverage.sh
  artifacts:
    when: always
    paths:
      - build/Release/result/coverage_results/

publish-kpis:
  stage: test
  needs:
    - build-release
    - code-coverage
  variables:
    BRANCH_NAME: $CI_COMMIT_REF_NAME
  script:
    - ci/publish_kpis.sh

documentation:
  stage: build
  needs:
    - build-docker-image
  script:
    - ci/build_doc.sh
  artifacts:
    paths:
      - build/doc/

build-deb-packages:
  parallel:
    matrix:
      - OS: ubuntu
        CODENAME: jammy
      - OS: ubuntu
        CODENAME: noble
  # Override default before_script
  before_script: ""
  stage: build
  needs: []
  image: ${OS}:${CODENAME}
  script:
    - ci/build_debs.sh ${CODENAME}
  artifacts:
    paths:
      - ./*.deb
