
stages:
  - build
  - test

default:
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
      variables:
        DOCKER_TLS_CERTDIR: ""
  tags:
      - "docker"

before_script:
  - apk add --update curl bash jq && rm -rf /var/cache/apk/*
  - docker info
  - ip a
  - env | sort

build-dependencies:
  stage: build
  needs: []
  script:
    - ci/docker-run.sh ci/install_deps.py -c ci/dependencies_emlix.json
  artifacts:
    paths:
      - build/deps/lib/
      - build/deps/include/

build-release:
  stage: build
  needs: [build-dependencies]
  script:
    - ci/docker-run.sh ci/build.sh --ci Release
  artifacts:
    paths:
      - build/Release/dist/
      - build/Release/cmake/

build-debug:
  stage: build
  needs: [build-dependencies]
  script:
    - ci/docker-run.sh ci/build.sh --ci Debug
  artifacts:
    paths:
      - build/Debug/dist/
      - build/Debug/cmake/

unit-test-release:
  stage: test
  needs:
    - build-release
    - build-dependencies
  script:
    - ci/docker-run.sh ci/run_utest.sh Release
  artifacts:
    when: always
    paths:
      - build/Release/result/unit_test/
    reports:
      junit: build/Release/result/unit_test/junit.xml

unit-test-debug:
  stage: test
  needs:
    - build-debug
    - build-dependencies
  script:
    - ci/docker-run.sh ci/run_utest.sh Debug
  artifacts:
    when: always
    paths:
      - build/Debug/result/unit_test/
    reports:
      junit: build/Debug/result/unit_test/junit.xml

code-lint:
  stage: test
  needs:
    - build-release
    - build-dependencies
  script:
    - ci/docker-run.sh ci/code_lint.py --ci
    - ci/docker-run.sh ci/checklicense.sh
  artifacts:
    when: always
    paths:
      - build/Release/cmake/lint_results/

code-coverage:
  rules:
    - when: never
      allow_failure: true
  stage: test
  needs:
    - build-release
    - build-dependencies
  script:
    - ci/docker-run.sh ci/create_coverage.sh
  artifacts:
    when: always
    paths:
      - build/Release/result/coverage_results/

publish-kpis:
  rules:
    - when: never
      allow_failure: true
  needs: [code-coverage]
  script:
    - ci/publish_pkis.sh

documentation:
  stage: build
  script:
    - ci/docker-run.sh ci/build_doc.sh
  artifacts:
    paths:
      - build/doc/
